
# 테크와 대시보드 프론트엔드 디자인 및 UI/UX 분석

## 1. 디자인 시스템

### 1.1 색상 체계
- **상태별 색상 코드**:
  - 대기(WAITING): `#d4e6ff`, `#BAE7FF` (연한 파란색)
  - 진행중(IN_PROGRESS): `#FFF4DE`, `#FFE2B5` (노란색 계열)
  - 완료(COMPLETE): `#e6f7e6`, `#C5F5E1` (연한 녹색)
  - 이슈(ISSUE): `#FFE9E9`, `#FFD1D1` (연한 빨간색)
  - 취소(CANCEL): `#F5F5F5`, `#D9D9D9` (회색)

- **부서별 색상 테마**:
  - CS: 파란색 계열 (primary: `#1890FF`)
  - HES: 보라색 계열 (primary: `#722ED1`)
  - LENOVO: 청록색 계열 (primary: `#13C2C2`)

- **기본 브랜드 색상**: `#1890ff` (파란색)

### 1.2 타이포그래피
- **폰트 패밀리**: 'Apple SD Gothic Neo', 'Malgun Gothic', sans-serif
- **폰트 스타일**:
  ```javascript
  FONT_STYLES = {
    TITLE: {
      LARGE: { fontSize: '24px', fontWeight: 600 },
      MEDIUM: { fontSize: '20px', fontWeight: 600 },
      SMALL: { fontSize: '16px', fontWeight: 600 },
    },
    BODY: {
      LARGE: { fontSize: '16px', fontWeight: 400 },
      MEDIUM: { fontSize: '14px', fontWeight: 400 },
      SMALL: { fontSize: '12px', fontWeight: 400 },
    },
    LABEL: { fontSize: '14px', fontWeight: 500 },
  }
  ```

## 2. UI 컴포넌트

### 2.1 레이아웃 구조
- **MainLayout**: 전체 페이지 레이아웃 (사이드바 + 콘텐츠 영역)
- **Sidebar**: 접을 수 있는 사이드 메뉴 (로고, 메뉴, 사용자 정보 포함)
- **ErrorBoundary**: 전역 오류 핸들링 컴포넌트

### 2.2 핵심 컴포넌트
- **대시보드 테이블**:
  - 상태별 행 배경색 자동 적용
  - 배송/회수 유형에 따른 색상 강조
  - 필터링 및 검색 기능 내장
  - 체크박스를 통한 다중 선택 지원

- **시각화 차트**:
  - **상태 파이 차트**: 파스텔톤 색상의 원형 차트로 배송 상태 시각화
  - **시간대별 막대 그래프**: 시간대별 접수량을 부서별로 분리하여 표시
  - 주간(09-19시) 및 야간(19-09시) 시간대 구분

- **공통 UI 요소**:
  - 로딩 스피너
  - 알림 메시지 (성공, 에러, 경고)
  - 모달 다이얼로그
  - 페이지네이션

### 2.3 폼 요소
- **RangePicker**: 날짜 범위 선택용 캘린더
- **필터 드롭다운**: 종류, 부서, 창고 등 필터링
- **검색 입력**: 주문번호 검색 기능

## 3. 반응형 디자인
- 기본적인 반응형 미디어 쿼리 적용:
```css
@media (max-width: 992px) {
  .dashboard-filters {
    padding: 12px;
  }
  .dashboard-filters > div {
    margin-bottom: 8px;
  }
}
```
- 데스크톱 우선 설계로 모바일 최적화는 제한적
- 사이드바 접기 기능으로 작은 화면 대응

## 4. 상호작용 및 사용자 경험

### 4.1 테이블 상호작용
- 행 호버 효과: 상태별 색상의 더 진한 버전으로 변경
- 행 선택 시 상세 정보 모달 표시
- 상태별 행 배경색으로 시각적 구분 강화

### 4.2 시각적 피드백
- 상태별 아이콘 및 색상 태그
- 툴팁을 통한 추가 정보 제공
- 차트 애니메이션 및 인터랙티브 요소

### 4.3 알림 및 피드백 메커니즘
- 작업 성공/실패 시 알림 메시지
- 로딩 스피너를 통한 작업 중 상태 표시
- 데이터 없음 상태에 대한 명확한 표시

## 5. 기술 구현

### 5.1 Ant Design 활용
- 기본 Ant Design 테마 스타일링 (ConfigProvider)
- 한국어 지역화 (koKR)
- Ant Design 컴포넌트 커스텀 스타일링

### 5.2 차트 및 시각화
- `@ant-design/plots`를 활용한 차트 구현
- 파이 차트, 컬럼 차트 등 다양한 시각화 요소
- 파스텔톤 색상 팔레트로 부드러운 시각적 경험

### 5.3 성능 최적화
- React 지연 로딩 (lazy, Suspense)
- 조건부 렌더링으로 불필요한 리렌더링 방지
- 컴포넌트 메모이제이션

## 6. 사용자 중심 디자인 특징

### 6.1 직관적인 색상 코딩
- 상태별 명확한 색상 구분으로 빠른 정보 인식
- 부서별 고유 색상 테마로 일관된 시각적 경험

### 6.2 간결한 정보 구조
- 중요 정보를 우선적으로 배치
- 부가 정보는 툴팁이나 세부 화면에서 제공

### 6.3 효율적인 워크플로우
- 논리적 작업 흐름에 맞춘 UI 배치
- 자주 사용하는 기능에 쉽게 접근 가능한 레이아웃

## 7. 전체 UI/UX 아키텍처

프로젝트는 Ant Design을 기반으로 한 직관적이고 일관된 사용자 경험을 제공합니다. 파스텔톤 색상과 명확한 구조의 테이블, 시각화 차트를 통해 배송 정보를 효과적으로 전달하는 데 중점을 두고 있습니다. 반응형 설계는 제한적이지만, 핵심 기능에 직관적으로 접근할 수 있는 심플한 레이아웃을 유지하고 있습니다.
