1. 인증 API (Auth)
1.1 로그인 (POST /auth/login)
요청 (Request):

json
코드 복사
{
  "username": "admin",
  "password": "password123"
}
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "로그인 성공",
  "data": {
    "user_id": "admin",
    "name": "관리자",
    "role": "ADMIN"
  }
}
1.2 로그아웃 (POST /auth/logout)
쿠키 세션을 사용하므로, 별도 Request Body 없이 세션 쿠키로 로그인 상태를 식별합니다.

요청 (Request):

bash
코드 복사
POST /auth/logout
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "로그아웃 성공",
  "data": null
}
1.3 현재 사용자 정보 (GET /auth/me)
이 역시 세션 쿠키로 인증을 식별하며, 바디에 JSON은 없습니다.

요청 (Request):

vbnet
코드 복사
GET /auth/me
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "사용자 정보 조회 성공",
  "data": {
    "user_id": "admin",
    "name": "관리자",
    "role": "ADMIN",
    "last_login": "2025-04-16T10:30:00.000Z"
  }
}
2. 대시보드 API (Dashboard)
2.1 주문 목록 조회 (GET /dashboard)
요청 (Request):

bash
코드 복사
GET /dashboard?start_date=2025-04-16&end_date=2025-04-17&page=1&limit=10
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "주문 목록 조회 성공",
  "data": {
    "items": [
      {
        "dashboard_id": 1,
        "order_no": "ORD-001",
        "type": "DELIVERY",
        "status": "WAITING",
        "department": "CS",
        "warehouse": "SEOUL",
        "sla": "12H",
        "eta": "2025-04-16T14:00:00.000Z",
        "create_time": "2025-04-16T10:00:00.000Z",
        "postal_code": "12345",
        "address": "서울시 강남구",
        "customer": "홍길동",
        "contact": "010-1234-5678",
        "driver_name": null,
        "driver_contact": null,
        "remark": "특이사항 없음",
        "depart_time": null,
        "complete_time": null,
        "updated_by": "admin",
        "update_at": "2025-04-16T10:00:00.000Z",
        "locked_info": {
          "locked": false,
          "editable": true,
          "message": "편집 가능합니다"
        }
      }
      // ... 기타 주문
    ],
    "total": 123,
    "page": 1,
    "limit": 10,
    "status_counts": {
      "WAITING": 45,
      "IN_PROGRESS": 36,
      "COMPLETE": 28,
      "ISSUE": 10,
      "CANCEL": 4
    },
    "filter": {
      "start_date": "2025-04-16T00:00:00.000Z",
      "end_date": "2025-04-17T00:00:00.000Z"
    }
  }
}
2.2 주문 상세 조회 (GET /dashboard/{order_id})
요청 (Request):

bash
코드 복사
GET /dashboard/1
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "주문 조회 성공",
  "data": {
    "dashboard_id": 1,
    "order_no": "ORD-001",
    "type": "DELIVERY",
    "status": "WAITING",
    "department": "CS",
    "warehouse": "SEOUL",
    "sla": "12H",
    "eta": "2025-04-16T14:00:00.000Z",
    "create_time": "2025-04-16T10:00:00.000Z",
    "postal_code": "12345",
    "address": "서울시 강남구",
    "customer": "홍길동",
    "contact": "010-1234-5678",
    "driver_name": null,
    "driver_contact": null,
    "remark": "특이사항 없음",
    "depart_time": null,
    "complete_time": null,
    "updated_by": "admin",
    "update_at": "2025-04-16T10:00:00.000Z"
  },
  "lock_status": {
    "locked": false,
    "editable": true,
    "message": "편집 가능합니다"
  }
}
2.3 주문 생성 (POST /dashboard)
요청 (Request):

json
코드 복사
{
  "order_no": "ORD-002",
  "type": "DELIVERY",
  "department": "CS",
  "warehouse": "SEOUL",
  "sla": "12H",
  "eta": "2025-04-16T16:00:00.000Z",
  "postal_code": "12345",
  "address": "서울시 강남구",
  "customer": "김철수",
  "contact": "010-2345-6789",
  "driver_name": "",
  "driver_contact": "",
  "remark": "부재시 경비실에 맡겨주세요"
}
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "주문 생성 성공",
  "data": {
    "dashboard_id": 124,
    "order_no": "ORD-002",
    "type": "DELIVERY",
    "status": "WAITING",
    "department": "CS",
    "warehouse": "SEOUL",
    "sla": "12H",
    "eta": "2025-04-16T16:00:00.000Z",
    "create_time": "2025-04-16T11:30:00.000Z",
    "postal_code": "12345",
    "address": "서울시 강남구",
    "customer": "김철수",
    "contact": "010-2345-6789",
    "driver_name": "",
    "driver_contact": "",
    "remark": "부재시 경비실에 맡겨주세요",
    "depart_time": null,
    "complete_time": null,
    "updated_by": "admin",
    "update_at": "2025-04-16T11:30:00.000Z"
  }
}
2.4 주문 수정 (PUT /dashboard/{order_id})
요청 (Request):

json
코드 복사
{
  "order_no": "ORD-002",
  "type": "DELIVERY",
  "department": "CS",
  "warehouse": "SEOUL",
  "sla": "12H",
  "eta": "2025-04-16T17:00:00.000Z",
  "postal_code": "12345",
  "address": "서울시 강남구 역삼동",
  "customer": "김철수",
  "contact": "010-2345-6789",
  "driver_name": "",
  "driver_contact": "",
  "remark": "부재시 경비실에 맡겨주세요. 연락 부탁드립니다."
}
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "주문 업데이트 성공",
  "data": {
    "dashboard_id": 124,
    "order_no": "ORD-002",
    "type": "DELIVERY",
    "status": "WAITING",
    "department": "CS",
    "warehouse": "SEOUL",
    "sla": "12H",
    "eta": "2025-04-16T17:00:00.000Z",
    "create_time": "2025-04-16T11:30:00.000Z",
    "postal_code": "12345",
    "address": "서울시 강남구 역삼동",
    "customer": "김철수",
    "contact": "010-2345-6789",
    "driver_name": "",
    "driver_contact": "",
    "remark": "부재시 경비실에 맡겨주세요. 연락 부탁드립니다.",
    "depart_time": null,
    "complete_time": null,
    "updated_by": "admin",
    "update_at": "2025-04-16T11:45:00.000Z"
  }
}
2.5 주문 상태 일괄 변경 (PATCH /dashboard/status-multiple)
요청 (Request):

json
코드 복사
{
  "order_ids": [1, 2, 3],
  "status": "IN_PROGRESS"
}
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "3개 주문 상태 변경 성공",
  "data": {
    "updated_count": 3,
    "updated_ids": [1, 2, 3],
    "forbidden_ids": []
  }
}
2.6 기사 배정 (PATCH /dashboard/assign-driver)
요청 (Request):

json
코드 복사
{
  "order_ids": [1, 2, 3],
  "driver_name": "김배송",
  "driver_contact": "010-9876-5432"
}
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "3개 주문에 기사 배정 성공",
  "data": null
}
2.7 주문 락 획득 (POST /dashboard/{order_id}/lock)
요청 (Request):

bash
코드 복사
POST /dashboard/1/lock
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "주문 락 획득 성공",
  "lock_status": {
    "locked": true,
    "editable": true,
    "message": "현재 사용자가 편집 중입니다"
  }
}
2.8 주문 락 해제 (POST /dashboard/{order_id}/unlock)
요청 (Request):

bash
코드 복사
POST /dashboard/1/unlock
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "주문 락 해제 성공",
  "lock_status": {
    "locked": false,
    "editable": true,
    "message": "편집 가능합니다"
  }
}
3. 인수인계 API (Handover)
3.1 인수인계 목록 조회 (GET /handover)
요청 (Request):

bash
코드 복사
GET /handover?page=1&limit=10
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "인수인계 목록 조회 성공",
  "data": {
    "items": [
      {
        "handover_id": 1,
        "title": "오전 배송 인수인계",
        "content": "오전 배송 건 처리 완료했습니다. 이슈 건은 따로 없습니다.",
        "is_notice": false,
        "create_time": "2025-04-16T08:30:00.000Z",
        "created_by": "user1",
        "update_at": "2025-04-16T08:30:00.000Z",
        "updated_by": "user1",
        "locked_info": {
          "locked": false,
          "editable": true,
          "message": "편집 가능합니다"
        }
      },
      {
        "handover_id": 2,
        "title": "[공지] 4/17 시스템 점검 안내",
        "content": "4월 17일 오전 2시~4시까지 시스템 점검이 있을 예정입니다.",
        "is_notice": true,
        "create_time": "2025-04-16T09:00:00.000Z",
        "created_by": "admin",
        "update_at": "2025-04-16T09:00:00.000Z",
        "updated_by": "admin",
        "locked_info": {
          "locked": false,
          "editable": false,
          "message": "관리자만 편집 가능합니다"
        }
      }
      // ... 기타 인수인계 항목
    ],
    "total": 42,
    "page": 1,
    "limit": 10,
    "notices": [
      {
        "handover_id": 2,
        "title": "[공지] 4/17 시스템 점검 안내",
        "content": "4월 17일 오전 2시~4시까지 시스템 점검이 있을 예정입니다.",
        "is_notice": true,
        "create_time": "2025-04-16T09:00:00.000Z",
        "created_by": "admin",
        "update_at": "2025-04-16T09:00:00.000Z",
        "updated_by": "admin"
      }
      // ... 기타 공지사항
    ]
  }
}
3.2 인수인계 생성 (POST /handover)
요청 (Request):

json
코드 복사
{
  "title": "오후 배송 인수인계",
  "content": "오후 배송 건 15건 중 12건 완료, 3건 이슈 발생",
  "is_notice": false
}
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "인수인계 생성 성공",
  "data": {
    "handover_id": 43,
    "title": "오후 배송 인수인계",
    "content": "오후 배송 건 15건 중 12건 완료, 3건 이슈 발생",
    "is_notice": false,
    "create_time": "2025-04-16T17:30:00.000Z",
    "created_by": "user1",
    "update_at": "2025-04-16T17:30:00.000Z",
    "updated_by": "user1"
  }
}
3.3 인수인계 삭제 (DELETE /handover/{handover_id})
작성자 본인 또는 관리자(ADMIN) 권한이 없으면 거부됩니다.

요청 (Request):

bash
코드 복사
DELETE /handover/1
응답 (성공)
json
코드 복사
{
  "success": true,
  "message": "인수인계 삭제 성공",
  "data": null
}
응답 (권한 없음)
json
코드 복사
{
  "success": false,
  "message": "인수인계 삭제 권한이 없습니다. 작성자 또는 관리자만 삭제할 수 있습니다.",
  "error_code": "PERMISSION_DENIED"
}
3.4 인수인계 수정 (PUT /handover/{handover_id})
작성자 본인 또는 관리자(ADMIN) 권한이 없으면 수정 불가합니다.

요청 (Request):

json
코드 복사
{
  "title": "오후 배송 인수인계 (수정)",
  "content": "오후 배송 15건 중 14건 완료, 1건 이슈",
  "is_notice": false
}
응답 (성공)
json
코드 복사
{
  "success": true,
  "message": "인수인계 수정 성공",
  "data": {
    "handover_id": 43,
    "title": "오후 배송 인수인계 (수정)",
    "content": "오후 배송 15건 중 14건 완료, 1건 이슈",
    "is_notice": false,
    "create_time": "2025-04-16T17:30:00.000Z",
    "created_by": "user1",
    "update_at": "2025-04-16T18:00:00.000Z",
    "updated_by": "user1"
  }
}
응답 (권한 없음)
json
코드 복사
{
  "success": false,
  "message": "인수인계 수정 권한이 없습니다. 작성자 또는 관리자만 수정할 수 있습니다.",
  "error_code": "PERMISSION_DENIED"
}
권한 체크 로직

현재 로그인한 사용자가 인수인계 작성자인지 확인

현재 로그인한 사용자가 관리자(ADMIN)인지 확인

위 두 조건 중 하나라도 충족하지 않으면 PERMISSION_DENIED 반환

4. 시각화 API (Visualization)
4.1 시각화 통계 조회 (GET /visualization/stats)
4.1.1 시간대별 통계 (visualization_type=time_based)
요청 (Request):

bash
코드 복사
GET /visualization/stats?start_date=2025-04-10&end_date=2025-04-16&visualization_type=time_based
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "시간대별 접수량 조회 성공",
  "data": {
    "visualization_type": "time_based",
    "start_date": "2025-04-10T00:00:00.000Z",
    "end_date": "2025-04-16T23:59:59.999Z",
    "departments": [
      {
        "department": "CS",
        "data": [
          { "time_slot": "09-10", "count": 15 },
          { "time_slot": "10-11", "count": 22 },
          // ...
        ]
      },
      {
        "department": "HES",
        "data": [
          // ...
        ]
      },
      {
        "department": "LENOVO",
        "data": [
          // ...
        ]
      }
    ]
  }
}
4.1.2 부서별 통계 (visualization_type=department_based)
요청 (Request):

bash
코드 복사
GET /visualization/stats?start_date=2025-04-10&end_date=2025-04-16&visualization_type=department_based
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "부서별 상태 통계 조회 성공",
  "data": {
    "visualization_type": "department_based",
    "start_date": "2025-04-10T00:00:00.000Z",
    "end_date": "2025-04-16T23:59:59.999Z",
    "departments": [
      {
        "department": "CS",
        "total_count": 142,
        "status_data": [
          { "status": "WAITING", "count": 45, "ratio": 31.69, "color": "#1890FF" },
          { "status": "IN_PROGRESS", "count": 36, "ratio": 25.35, "color": "#FAAD14" },
          { "status": "COMPLETE", "count": 48, "ratio": 33.80, "color": "#52C41A" },
          { "status": "ISSUE", "count": 8, "ratio": 5.63, "color": "#FF4D4F" },
          { "status": "CANCEL", "count": 5, "ratio": 3.52, "color": "#D9D9D9" }
        ]
      },
      {
        "department": "HES",
        "total_count": 95,
        "status_data": [
          // ...
        ]
      },
      {
        "department": "LENOVO",
        "total_count": 77,
        "status_data": [
          // ...
        ]
      }
    ]
  }
}
5. 사용자 관리 API (User)
5.1 사용자 목록 조회 (GET /users)
요청 (Request):

bash
코드 복사
GET /users?page=1&limit=100
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "사용자 목록 조회 성공",
  "data": {
    "items": [
      {
        "user_id": "admin",
        "name": "관리자",
        "role": "ADMIN",
        "created_at": "2025-01-01T00:00:00.000Z",
        "last_login": "2025-04-16T10:30:00.000Z"
      },
      {
        "user_id": "user1",
        "name": "일반사용자1",
        "role": "USER",
        "created_at": "2025-01-01T00:00:00.000Z",
        "last_login": "2025-04-16T09:15:00.000Z"
      }
      // ... 기타 사용자
    ],
    "total": 10,
    "page": 1,
    "limit": 100
  }
}
5.2 사용자 생성 (POST /users)
요청 (Request):

json
코드 복사
{
  "user_id": "user3",
  "password": "password123",
  "name": "신규사용자",
  "role": "USER"
}
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "사용자 생성 성공",
  "data": {
    "user_id": "user3",
    "name": "신규사용자",
    "role": "USER",
    "created_at": "2025-04-16T14:00:00.000Z"
  }
}
5.3 사용자 삭제 (DELETE /users/{user_id})
요청 (Request):

bash
코드 복사
DELETE /users/user3
응답 (Response):

json
코드 복사
{
  "success": true,
  "message": "사용자 삭제 성공",
  "data": null
}
(기타) 에러 발생 시 공통 응답
에러가 발생할 경우, 공통 응답에 error_code 필드가 추가될 수 있습니다.

예시:

json
코드 복사
{
  "success": false,
  "message": "인수인계 삭제 권한이 없습니다. 작성자 또는 관리자만 삭제할 수 있습니다.",
  "error_code": "PERMISSION_DENIED"
}
