# 배송 실시간 관제 시스템 상세 동작 명세서 (2025‑05‑01 전체판)

본 문서는 배송 실시간 관제 시스템의 백엔드·프론트엔드 구현에 필요한 **모든** 정보를 통합합니다. 실제 DB 스키마(init‑db.sql)와 1 : 1 매핑되며, 개발 중 정상 동작 여부를 확인할 **중간 포인트 로깅** 예시를 포함합니다.

---

## Ⅰ. 프로젝트 개요 및 목표

| 구분           | 내용                          |
| ------------ | --------------------------- |
| 실시간 주문·배송 관리 | ETA 기준 조회·상태 관리             |
| 효율적 배차       | 기사 배정·연락처 관리 통합             |
| 권한           | USER / ADMIN 2‑레벨           |
| UI           | 한국어, 데스크톱 전용                |
| 브랜드 컬러       | `#D72519` (포인트)             |
| 예상 부하        | 동시 50 · TPS 100 · ≤100 MB/h |
| 렌더링          | 초기 SSR → 이후 CSR             |

---

## Ⅱ. 아키텍처 원칙 · 기술 스택

### 2.1 원칙

1. **SSR 우선 + CSR 보조**
2. **Form(PRG) vs JSON API** 분리
3. **명시적 액션** – 자동 최소화
4. **YAGNI**
5. 과도한 추상화 금지
6. **서버 최종 검증 · 클라이언트 실시간 검증**
7. UI 일관성 (모바일 미지원)

### 2.2 스택

| 레이어      | 스택                                            |
| -------- | --------------------------------------------- |
| Backend  | Python 3.12 · FastAPI · Jinja2                |
| Frontend | HTML/CSS/JS (+ Bootstrap/Tailwind)            |
| DB       | MySQL 8.0                                     |
| Infra    | Docker (GAE Flexible) · Cloud SQL(Private IP) |

### 2.3 **로깅 시스템** ★

- `logger.py` **삭제** → 표준 **Python logging** 사용
- 전역 설정(main.py)

```python
import logging, sys
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(module)s - %(message)s",
    handlers=[logging.StreamHandler(sys.stdout)]
)
```

- 함수 진입·중간·종료·예외에 로그 삽입

---

## Ⅲ. 권한 구조 · 인증

| 역할    | 접근            | CRUD      | 상태 전이                                      |
| ----- | ------------- | --------- | ------------------------------------------ |
| ADMIN | 대시보드·인수인계·사용자 | 전체(락 확보)  | 5 상태 자유+역행                                 |
| USER  | 대시보드·인수인계     | 본인 데이터 수정 | WAITING→IN\_PROGRESS→COMPLETE/ISSUE/CANCEL |

- SessionMiddleware / 쿠키 `session` (SameSite lax, HTTPS prod)
- 만료 정리 `initialize_session_cleanup`

---

## Ⅳ. 데이터 전송 방식

### 4.1 **Form** (HTML 302 PRG)

| 기능        | 엔드포인트                      | 요청                                | 응답               | 비고         |
| --------- | -------------------------- | --------------------------------- | ---------------- | ---------- |
| 로그인       | `POST /login`              | form (`user_id`, `user_password`) | 302→/dashboard   | –          |
| 로그아웃      | `GET/POST /logout`         | –                                 | 302→/login       | –          |
| 주문 생성     | `POST /orders`             | DashboardCreate                   | 302→/orders/{id} | –          |
| 주문 수정     | `POST /orders/{id}`        | DashboardUpdate                   | 302→상세           | –          |
| 주문 삭제     | `POST /orders/{id}/delete` | –                                 | 302→/dashboard   | **개별** 삭제  |
| 상태 변경     | `POST /orders/{id}/status` | `status`                          | 302→상세           | 상세 "변경" 버튼 |
| 기사 배정     | `POST /orders/{id}/driver` | `driver_name`,`driver_contact`    | 302→상세           | 상세 "배정" 버튼 |
| 인수인계 CRUD | `/handover…`               | Form                              | 302              | –          |

### 4.2 **JSON API** (`application/json`)

| 기능       | 엔드포인트                     | 메서드 | Response                                          |
| -------- | ------------------------- | --- | ------------------------------------------------- |
| 주문 목록    | `GET /dashboard/list`     | GET | `{success,message,data:{items,pagination,stats}}` |
| 주문 검색    | `GET /search`             | GET | 동일                                                |
| 인수인계 목록  | `GET /api/handover/list`  | GET | `{success,message,data:{items,pagination}}`       |
| 락 확인(주문) | `GET /lock/order/{id}`    | GET | `{success,locked,owner,editable}`                 |
| 락 확인(인수) | `GET /lock/handover/{id}` | GET | 위와 동일                                             |

### 4.3 대시보드 하이브리드

- **GET /dashboard** (SSR) — Query `page,page_size,start_date,end_date`\
   · `start_date`,`end_date` 기본값 **오늘** → 자동 조회
- 날짜·주문번호 → Form PRG,  상태·부서·창고 필터 & 컬럼 설정 → CSR

---

## Ⅴ. 데이터 스키마 (init‑db.sql 대응)

```json
{
  "dashboard_id": int,
  "order_no": "string",
  "type": "DELIVERY|RETURN",
  "status": "WAITING|IN_PROGRESS|COMPLETE|ISSUE|CANCEL",
  "department": "CS|HES|LENOVO",
  "warehouse": "SEOUL|BUSAN|GWANGJU|DAEJEON",
  "sla": "string",
  "eta": "YYYY-MM-DD HH:MM",
  "create_time": "YYYY-MM-DD HH:MM",
  "depart_time": "YYYY-MM-DD HH:MM",
  "complete_time": "YYYY-MM-DD HH:MM",
  "postal_code": "string(5)",
  "city": "string",
  "county": "string",
  "district": "string",
  "region": "string",
  "distance": int,
  "duration_time": int,
  "address": "string",
  "customer": "string",
  "contact": "string",
  "driver_name": "string",
  "driver_contact": "string",
  "update_by": "string",
  "update_at": "YYYY-MM-DD HH:MM",
  "remark": "string",
  "is_locked": bool
}
```

```json
{
  "handover_id": int,
  "title": "string",
  "content": "string",
  "update_at": "YYYY-MM-DD HH:MM",
  "update_by": "string",
  "create_by": "string",
  "is_notice": bool,
  "is_locked": bool
}
```

```json
{
  "user_id": "string",
  "user_password": "string",
  "user_department": "CS|HES|LENOVO",
  "user_role": "USER|ADMIN"
}
```

---

## Ⅵ. 페이지별 구현 지침

### 6.1 대시보드

- **SSR** : 오늘 데이터·테이블·폼 렌더
- **CSR** : 상태/부서/창고 필터, 컬럼 커스터마이징, 클라이언트 페이지네이션
- **상세 \*\*\*\*****`/orders/{id}`**\
   · 진입 시 `GET /lock/order/{id}`\
   · 상태 옆 **[변경]** → `POST /orders/{id}/status`\
   · 기사 옆 **[배정]** → `POST /orders/{id}/driver`\
   · PRG + Flash 메시지

### 6.2 인수인계

- 목록(JSON)+CSR
- 상세 락 확인 → 수정·삭제 버튼 노출
- 공지(`is_notice`) = 관리자 전용

### 6.3 사용자 관리

- 관리자 전용 CRUD(Form) + 목록(JSON)

---

## Ⅶ. 공통 기능 가이드

### 7.1 **로깅** (재강조)

- 예외 `exc_info=True` 포함
- 로깅 레벨 : DEBUG/INFO/WARNING/ERROR/CRITICAL

### 7.2 **락 메커니즘**

| 위치   | 처리                         |
| ---- | -------------------------- |
| 목록   | 락 기능 없음 (대화상자 제거)          |
| 상세   | 진입·편집 전 `GET /lock/...` 필수 |
| 타임아웃 | 5 분                        |

### 7.3 API 응답 표준

```json
{
  "success": true,
  "message": "문구",
  "data": {...}
}
```

### 7.4 Flash 알림

| 유형 | 색  | 지속     |
| -- | -- | ------ |
| 오류 | 빨강 | 닫을 때까지 |
| 경고 | 주황 | 5 s    |
| 성공 | 녹색 | 3 s    |
| 정보 | 파랑 | 3 s    |

---

## Ⅷ. 백엔드 API 상세

### 8.1 인증

| 메서드       | URL     | 요청   | 응답             | 비고          |
| --------- | ------- | ---- | -------------- | ----------- |
| GET       | /login  | –    | **HTML**       | 로그인 페이지 SSR |
| POST      | /login  | Form | 302→/dashboard | 세션 생성       |
| GET\|POST | /logout | –    | 302→/login     | 세션 삭제       |

### 8.2 대시보드

| 메서드  | URL                 | 요청          | 응답       | 비고         |
| ---- | ------------------- | ----------- | -------- | ---------- |
| GET  | /dashboard          |             | **HTML** |            |
| GET  | /dashboard/list     | Query       | **JSON** | 목록 + stats |
| GET  | /search             | order\_no   | **JSON** | 주문번호 검색    |
| GET  | /orders/{id}        | –           | **HTML** | 상세 SSR     |
| POST | /orders             | Form        | 302      | 생성         |
| POST | /orders/{id}        | Form        | 302      | 수정         |
| POST | /orders/{id}/delete | –           | 302      | **개별 삭제**  |
| POST | /orders/{id}/status | status      | 302      | 상태 변경 버튼   |
| POST | /orders/{id}/driver | driver info | 302      | 기사 배정 버튼   |
| GET  | /lock/order/{id}    | –           | **JSON** | 상세 락       |

### 8.3 인수인계

| 메서드  | URL                   | 요청    | 응답       | 비고      |
| ---- | --------------------- | ----- | -------- | ------- |
| GET  | /handover             | –     | **HTML** | 페이지 SSR |
| GET  | /api/handover/list    | Query | **JSON** | 목록      |
| GET  | /handover/{id}        | –     | **HTML** | 상세 SSR  |
| POST | /handover             | Form  | 302      | 생성      |
| POST | /handover/{id}        | Form  | 302      | 수정      |
| POST | /handover/{id}/delete | –     | 302      | 삭제      |
| GET  | /lock/handover/{id}   | –     | **JSON** | 상세 락    |

---

## Ⅸ. 보안 · 기타

- KST(UTC+9) / `YYYY-MM-DD HH:MM`
- CORS `ALLOWED_ORIGINS` 화이트리스트
- HSTS · X-Content-Type-Options · X-Frame-Options
- 우편번호 4→5 자리 자동 보정

---

## Ⅹ. 개발 · 배포 지침

1. 로컬 : Windows + PowerShell + Cursor
2. Dockerfile 1개, env vars, 헬스체크 1회
3. CSRF 토큰 불필요(SameSite lax)
4. 자동 재시도 로직 금지
5. `utils.js` 공통 함수

---

## Ⅺ. 성능 · 안정성

- 필요한 컬럼에만 인덱스
- 트랜잭션 범위 최소
- 네트워크 타임아웃 처리
- JSON 응답 형식 일관 유지

