# teckwah-TMS/deploy/.env
# 배송 실시간 관제 시스템을 위한 환경 설정 파일

# =============================================
# Node.js 환경 설정 - 추가
# =============================================
NODE_ENV=development # development, production

# =============================================
# 데이터베이스 설정 - Docker 네트워크용
# =============================================
MYSQL_HOST=host.docker.internal
MYSQL_PORT=3306
MYSQL_USER=root
MYSQL_PASSWORD=1234
MYSQL_DATABASE=delivery_system
MYSQL_CHARSET=utf8mb4

# =============================================
# 서버 설정
# =============================================
PORT=8080
DEBUG=True    # 프로덕션 환경에서는 False로 설정
PROJECT_NAME=배송 실시간 관제 시스템
# 단일 컨테이너 배포이므로 동일 도메인으로 설정
ALLOWED_ORIGINS=http://localhost:8080

# =============================================
# 서비스 설정
# =============================================
API_TIMEOUT=10  # 초 단위

# =============================================
# 로깅 설정
# =============================================
LOG_LEVEL=INFO
ENABLE_ACCESS_LOG=True

# =============================================
# 인증 설정 - 세션 기반
# =============================================
SESSION_SECRET=4a24ff058be1925b52a62b9d594b367a600dde8730e647d2d29c9b2f7c7f6fff
SESSION_EXPIRE_HOURS=24

# =============================================
# 락 관련 설정 - 데이터 동시성 제어
# =============================================
LOCK_TIMEOUT_SECONDS=300
LOCK_CLEANUP_INTERVAL_MINUTES=10

# =============================================
# 빌드 설정 - 프론트엔드 및 백엔드 통합
# =============================================
# 프론트엔드는 같은 컨테이너의 백엔드와 통신하므로 별도 URL 불필요
ESLINT_NO_DEV_ERRORS=true
CI=false
GENERATE_SOURCEMAP=false

# =============================================
# GAE 배포 설정 (필요시 주석 해제)
# =============================================
# 클라우드 배포 시 아래 설정을 사용하세요
# MYSQL_HOST=/cloudsql/[YOUR-PROJECT]:[REGION]:[INSTANCE-NAME]
# MYSQL_USER=prod_user
# MYSQL_PASSWORD=prod_password
# MYSQL_DATABASE=delivery_system