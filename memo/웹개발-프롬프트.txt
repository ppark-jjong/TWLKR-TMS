# 요구사항 분석서 작성 가이드

## 1. 개요 및 목적
- 프로젝트의 개요 및 해결하려는 문제 정의
- 프로젝트의 주요 목표와 기대 효과
- 이해관계자 정의 (일반 사용자, 관리자, 개발팀 등)
- 프로젝트를 통해 해결하고자 하는 비즈니스 또는 기술적 과제

## 2. 범위 정의
- 프로젝트에서 구현할 핵심 기능 목록
- 프로젝트에서 제외할 기능 목록 및 그 이유
- 각 기능의 우선순위 설정 (필수, 선택, 추가 가능)
- 프로젝트가 운영될 환경 및 플랫폼 정의 (웹, 모바일, 하이브리드 등)

---

# 페이지별 요구사항 정의

## [페이지 명]
### 1. 기능 개요
- 해당 페이지의 역할 및 목적
- 페이지에서 수행할 주요 기능 정의
- 사용자의 행동 흐름에 따른 기능 분류
- 해당 페이지에서 필요한 주요 기술 요소

### 2. 프론트엔드 동작 전용 로직
- UI 상호작용 및 사용자 이벤트 처리 방식 (클릭, 입력, 드래그, 스크롤 등)
- 상태 관리 방식 (로컬 상태, 전역 상태, API 데이터 연동 등)
- 비동기 처리 방식 (로딩, 에러 처리, 최적화 방법 등)
- 화면 렌더링 및 DOM 업데이트 방식
- 페이지 간 데이터 전달 및 컴포넌트 통신 방식

### 3. API 명세
- API 호출 목록 및 각 API의 역할 정의
- HTTP 메서드 (GET, POST, PUT, DELETE) 및 엔드포인트 구조
- 요청 데이터 구조 및 필드 설명
- 응답 데이터 구조 및 필드 설명
- 인증 및 권한 관리 방식 (JWT, OAuth, 세션 등)
- 예외 처리 및 오류 응답 코드 정의

### 4. 백엔드 서비스 로직
- API 요청 처리 흐름 (컨트롤러 → 서비스 → 데이터베이스)
- 비즈니스 로직의 주요 연산 및 처리 방식
- 데이터 검증 및 예외 처리 방식
- 캐싱 전략 및 성능 최적화 방안
- 보안 고려사항 (SQL Injection, CSRF, XSS 방지 등)

### 5. DB 연결 서비스 로직
- ORM 또는 직접 SQL 사용 여부
- 데이터 조회, 삽입, 수정, 삭제 처리 방식
- 트랜잭션 관리 정책 및 롤백 처리 방식
- 비동기 DB 접근 방식 사용 여부 및 고려사항

### 6. 사용 DB 모델 및 트리거
- 해당 페이지에서 사용하는 테이블 목록 및 역할 설명
- 테이블 간 관계 및 외래 키 설정
- 데이터 무결성을 위한 제약 조건 및 트리거 정의
- 주요 쿼리 및 인덱스 최적화 방법

---

## 9. 에러 처리 및 로깅
- 프론트엔드에서 발생할 수 있는 주요 에러 유형과 처리 방식
- 백엔드에서 발생할 수 있는 주요 에러 유형과 처리 방식
- 예외 처리 정책 및 사용자 친화적인 에러 메시지 제공 방식
- 로깅 시스템 정의 (파일 로깅, 중앙 집중식 로깅, 클라우드 로깅 등)
- 에러 발생 시 알림 및 대응 방안

## 10. 보안 및 권한 관리
- 사용자 인증 방식 (JWT, OAuth, 세션 기반 등)
- 사용자 권한 레벨 및 접근 제어 정책
- 데이터 암호화 및 보안 정책 (비밀번호 해싱, TLS/SSL 적용 등)
- API 보안 정책 (CORS 설정, Rate Limiting, CSRF/XSS 방지 등)
- 로그 및 보안 모니터링 방법
